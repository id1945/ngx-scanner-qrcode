{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/safe.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <h1> ngx-scanner-qrcode </h1>\\n\\n  <!-- devices -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-md-6 col-lg-4 col-xl-3 my-1\\\">\\n      <select #select1 (change)=\\\"action.playDevice(select1.value)\\\" class=\\\"form-select form-select-sm\\\">\\n        <option [value]=\\\"null\\\" selected>Select device</option>\\n        <option *ngFor=\\\"let c of action.devices.value; let i = index\\\" [value]=\\\"c.deviceId\\\" [selected]=\\\"i == action.deviceIndexActive\\\">{{c.label}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"col-xs-12 col-md-6 col-lg-4 col-xl-3 my-1\\\">\\n      <select #select2 (change)=\\\"action.decode = select2.value\\\" class=\\\"form-select form-select-sm\\\">\\n        <option value=\\\"utf-8\\\" [selected]=\\\"action.decode == 'utf-8'\\\">UTF-8</option>\\n        <option value=\\\"iso-8859-15\\\" [selected]=\\\"action.decode == 'iso-8859-15'\\\">ISO-8859-15</option>\\n        <option value=\\\"windows-1252\\\" [selected]=\\\"action.decode == 'windows-1252'\\\">Windows-1252</option>\\n        <option value=\\\"macintosh\\\" [selected]=\\\"action.decode == 'macintosh'\\\">Macintosh</option>\\n      </select>\\n    </div>\\n  </div>\\n  \\n  <!-- ngx-scanner-qrcode -->\\n  <ngx-scanner-qrcode #action=\\\"scanner\\\" [config]=\\\"config\\\" (event)=\\\"onEvent($event, action)\\\"></ngx-scanner-qrcode>\\n\\n  <!-- data  -->\\n  <!-- <p class=\\\"data\\\">{{ action.data | async }}</p> -->\\n\\n  <!-- loading -->\\n  <p *ngIf=\\\"action.isLoading\\\">âŒ› Loading...</p>\\n\\n  <!-- start/stop -->\\n  <button class=\\\"btn\\\" [class.btn-info]=\\\"!action.isStart\\\" [class.btn-warning]=\\\"action.isStart\\\" [disabled]=\\\"action.isLoading\\\">\\n    <img *ngIf=\\\"!action.isStart\\\" (click)=\\\"handle(action, 'start')\\\" src=\\\"assets/images/camera-on.svg\\\" width=\\\"30px\\\"/>\\n    <img *ngIf=\\\"action.isStart\\\" (click)=\\\"handle(action, 'stop')\\\" src=\\\"assets/images/camera-off.svg\\\" width=\\\"30px\\\"/>\\n  </button>\\n  \\n  <!-- play/pause -->\\n  <button class=\\\"btn\\\" [class.btn-info]=\\\"!action.isStart\\\" [class.btn-warning]=\\\"action.isStart\\\" [disabled]=\\\"!action.isStart\\\" (click)=\\\"handle(action, action.isPause ? 'play' : 'pause')\\\">\\n    <img [src]=\\\"action.isPause ? 'assets/images/play.svg ': 'assets/images/pause.svg'\\\" width=\\\"30px\\\"/>\\n  </button>\\n\\n  <!-- isTorch -->\\n  <button class=\\\"btn\\\" [class.btn-info]=\\\"!action.isStart\\\" [class.btn-warning]=\\\"action.isStart\\\" [disabled]=\\\"!action.isStart\\\" (click)=\\\"action.isTorch = !action.isTorch; handle(action, 'torcher')\\\">\\n    <img [src]=\\\"action.isTorch ? 'assets/images/flash-off.svg' : 'assets/images/flash-on.svg'\\\" width=\\\"30px\\\"/>\\n  </button>\\n\\n  <!-- download -->\\n  <button class=\\\"btn\\\" [class.btn-info]=\\\"!action.isStart\\\" [class.btn-warning]=\\\"action.isStart\\\" [disabled]=\\\"!action.isStart\\\" (click)=\\\"handle(action, 'download')\\\">\\n    <img src=\\\"https://id1945.github.io/images/svg/capture.svg\\\" width=\\\"30px\\\"/>\\n  </button>\\n  <br>\\n\\n  <!-- For select files -->\\n  <input #file type=\\\"file\\\" (change)=\\\"onSelects(file.files)\\\" [multiple]=\\\"'multiple'\\\" [accept]=\\\"'.jpg, .png, .gif, .jpeg'\\\" class=\\\"btn btn-success my-2\\\"/>\\n  <br>\\n  <input #file2 type=\\\"file\\\" (change)=\\\"onSelects2(file2.files)\\\" [multiple]=\\\"'multiple'\\\" [accept]=\\\"'.jpg, .png, .gif, .jpeg'\\\" class=\\\"btn btn-success my-2\\\"/>\\n  <br>\\n\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <div class=\\\"col-xs-12 col-md-6 col-lg-4 col-xl-3 m-1\\\">\\n      <select #select3 (change)=\\\"percentage = select3.value\\\" class=\\\"form-select form-select-sm\\\">\\n        <option *ngFor=\\\"let item of [10,20,30,40,50,60,70,80,90,100]\\\" [value]=\\\"item\\\" [selected]=\\\"item == percentage\\\">Scale {{item}}%</option>\\n      </select>\\n    </div>\\n    <div class=\\\"col-xs-12 col-md-6 col-lg-4 col-xl-3 m-1\\\">\\n      <select #select4 (change)=\\\"quality = select4.value\\\" class=\\\"form-select form-select-sm\\\">\\n        <option *ngFor=\\\"let item of [10,20,30,40,50,60,70,80,90,100]\\\" [value]=\\\"item\\\" [selected]=\\\"item == quality\\\">Quality {{item}}%</option>\\n      </select>\\n    </div>\\n  </div>\\n\\n  <div *ngFor=\\\"let item of qrCodeResult\\\">\\n    <ngx-scanner-qrcode #actionFile=\\\"scanner\\\" [src]=\\\"item.url\\\" [config]=\\\"config\\\" (event)=\\\"onEvent($event)\\\"></ngx-scanner-qrcode>\\n    <!-- <p class=\\\"data\\\">{{ actionFile.data | async }}</p> -->\\n  </div>\\n \\n  <div *ngFor=\\\"let item of qrCodeResult2\\\">\\n    <img [src]=\\\"item.url | safe: 'url'\\\" alt=\\\"\\\" style=\\\"max-width: 100%\\\">\\n    <!-- <p class=\\\"data\\\">{{ item | json }}</p> -->\\n  </div>\\n\\n  <ngx-scanner-qrcode\\n    #actionFile=\\\"scanner\\\"\\n    (event)=\\\"onEvent($event)\\\"\\n    [src]=\\\"'https://raw.githubusercontent.com/id1945/ngx-scanner-qrcode/master/supported-barcode-types.png'\\\"\\n    [config]=\\\"config\\\"> \\n  </ngx-scanner-qrcode>\\n  <!-- <p class=\\\"data\\\">{{ actionFile.data | async }}</p> -->\\n\\n  <!-- License -->\\n  <p class=\\\"center\\\"><a href=\\\"https://github.com/id1945/ngx-scanner-qrcode/blob/master/LICENSE\\\">LGPL-2.1+ License</a></p>\\n\\n  <!-- Copyright -->\\n  <p class=\\\"center\\\">Author: DaiDH</p>\\n  <p class=\\\"center\\\">Copyright (C) 1991, 1999 Free Software Foundation, Inc.</p>\\n</div>\\n\"","module.exports = \"h1,\\nh5,\\np {\\n  font-weight: 600;\\n  word-break: break-all;\\n  font-family: 'Courier New', Courier, monospace; }\\n\\ndiv {\\n  text-align: center;\\n  background: #fdfdfd; }\\n\\ndiv button {\\n    border-radius: 50%;\\n    height: 60px;\\n    width: 60px;\\n    margin: 4px; }\\n\\ndiv buttondisabled {\\n      cursor: no-drop; }\\n\\ndiv .data {\\n    background: antiquewhite;\\n    border-radius: 5px; }\\n\"","import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { ScannerQRCodeConfig, NgxScannerQrcodeService, ScannerQRCodeSelectedFiles, ScannerQRCodeResult, NgxScannerQrcodeComponent } from 'ngx-scanner-qrcode';\nimport { delay } from 'rxjs/internal/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  \n  // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#front_and_back_camera\n  public config: ScannerQRCodeConfig = {\n    constraints: {\n      video: {\n        width: window.innerWidth\n      },\n    },\n    // canvasStyles: [\n    //   {\n    //     lineWidth: 1,\n    //     fillStyle: '#00950685',\n    //     strokeStyle: '#00950685',\n    //   },\n    //   {\n    //     font: '17px serif',\n    //     fillStyle: '#ff0000',\n    //     strokeStyle: '#ff0000',\n    //   }\n    // ],\n  };\n\n  public qrCodeResult: ScannerQRCodeSelectedFiles[] = [];\n  public qrCodeResult2: ScannerQRCodeSelectedFiles[] = [];\n  public percentage = 80;\n  public quality = 100;\n\n  @ViewChild('action') action: NgxScannerQrcodeComponent;\n\n  constructor(private qrcode: NgxScannerQrcodeService) { }\n\n  ngAfterViewInit(): void {\n    //this.action.isReady.pipe(delay(1000)).subscribe(res => {\n    this.action.isReady.subscribe(res => {\n      //this.handle(this.action, 'start');\n    });\n  }\n\n  public onEvent(e: ScannerQRCodeResult[], action?: any): void {\n    // e && action && action.pause();\n    console.log(e);\n  }\n\n  public handle(action: any, fn: string): void {\n    // Fix issue #27, #29\n    const playDeviceFacingBack = (devices: any[]) => {\n      // front camera or back camera check here!\n      const device = devices.find(f => (/back|rear|environment/gi.test(f.label))); // Default Back Facing Camera\n      action.playDevice(device ? device.deviceId : devices[0].deviceId);\n    }\n\n    if (fn === 'start') {\n      action[fn](playDeviceFacingBack).subscribe((r: any) => console.log(fn, r), alert);\n    } else {\n      action[fn]().subscribe((r: any) => console.log(fn, r), alert);\n    }\n  }\n  \n  public onSelects(files: any) {\n    this.qrcode.loadFiles(files, this.percentage, this.quality).subscribe((res: ScannerQRCodeSelectedFiles[]) => {\n      this.qrCodeResult = res;\n    });\n  }\n\n  public onSelects2(files: any) {\n    this.qrcode.loadFilesToScan(files, this.config, this.percentage, this.quality).subscribe((res: ScannerQRCodeSelectedFiles[]) => {\n      console.log(res);\n      this.qrCodeResult2 = res;\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SafePipe } from './safe.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { NgxScannerQrcodeModule, LOAD_WASM } from 'ngx-scanner-qrcode';\n\nLOAD_WASM().subscribe(res => console.log('LOAD_WASM',res));\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SafePipe,\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    NgxScannerQrcodeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// Angular\nimport { Pipe, PipeTransform } from '@angular/core';\nimport {\n  DomSanitizer,\n  SafeHtml,\n  SafeStyle,\n  SafeScript,\n  SafeUrl,\n  SafeResourceUrl,\n} from '@angular/platform-browser';\n\n/**\n * Sanitize HTML\n * Author: DaiDH\n */\n@Pipe({\n  name: 'safe',\n})\nexport class SafePipe implements PipeTransform {\n  /**\n   * Pipe Constructor\n   *\n   * @param _sanitizer: DomSanitezer\n   */\n  // tslint:disable-next-line\n  constructor(protected _sanitizer: DomSanitizer) {}\n\n  /**\n   * Transform\n   *\n   * @param value: string\n   * @param type: string\n   */\n  transform(\n    value: string,\n    type: string\n  ): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html':\n        return this._sanitizer.bypassSecurityTrustHtml(value);\n      case 'style':\n        return this._sanitizer.bypassSecurityTrustStyle(value);\n      case 'script':\n        return this._sanitizer.bypassSecurityTrustScript(value);\n      case 'url':\n        return this._sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl':\n        return this._sanitizer.bypassSecurityTrustResourceUrl(value);\n      default:\n        return this._sanitizer.bypassSecurityTrustHtml(value);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}