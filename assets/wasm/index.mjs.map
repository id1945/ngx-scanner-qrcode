{
"version": 3,
"file": "index.mjs",
"sources": [
"../build/zbar.mjs",
"../src/instance.ts",
"../src/enum.ts",
"../src/CppObject.ts",
"../src/ZBarSymbol.ts",
"../src/ZBarImage.ts",
"../src/ZBarScanner.ts",
"../src/module.ts"
],
"sourcesContent": [
"\nvar zbarWasm = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nasync function(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){const{createRequire:createRequire}=await import(\"module\");var require=createRequire(import.meta.url);var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=require(\"url\").fileURLToPath(new URL(\"./\",import.meta.url))}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow};Module[\"inspect\"]=()=>\"[Emscripten Module object]\"}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmExports;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;if(Module[\"locateFile\"]){wasmBinaryFile=\"ngx-scanner-qrcode.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL(\"ngx-scanner-qrcode.wasm\",import.meta.url).href}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(binaryFile)){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(()=>getBinarySync(binaryFile))}else if(readAsync){return new Promise((resolve,reject)=>{readAsync(binaryFile,response=>resolve(new Uint8Array(response)),reject)})}}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;wasmExports=exports;wasmMemory=wasmExports[\"g\"];updateMemoryViews();wasmTable=wasmExports[\"s\"];addOnInit(wasmExports[\"h\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var nowIsMonotonic=true;var __emscripten_get_now_is_monotonic=()=>nowIsMonotonic;function _emscripten_date_now(){return Date.now()}var _emscripten_get_now;_emscripten_get_now=()=>performance.now();var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=size-b.byteLength+65535>>>16;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var SYSCALLS={varargs:undefined,get(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr(ptr){var ret=UTF8ToString(ptr);return ret}};var _fd_close=fd=>52;function convertI32PairToI53Checked(lo,hi){return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);return 70}var printCharBuffers=[null,[],[]];var printChar=(stream,curr)=>{var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}};var _fd_write=(fd,iov,iovcnt,pnum)=>{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0};var wasmImports={d:__emscripten_get_now_is_monotonic,e:_emscripten_date_now,c:_emscripten_resize_heap,f:_fd_close,b:_fd_seek,a:_fd_write};var asm=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"h\"])();var _ImageScanner_create=Module[\"_ImageScanner_create\"]=()=>(_ImageScanner_create=Module[\"_ImageScanner_create\"]=wasmExports[\"i\"])();var _ImageScanner_destory=Module[\"_ImageScanner_destory\"]=a0=>(_ImageScanner_destory=Module[\"_ImageScanner_destory\"]=wasmExports[\"j\"])(a0);var _ImageScanner_set_config=Module[\"_ImageScanner_set_config\"]=(a0,a1,a2,a3)=>(_ImageScanner_set_config=Module[\"_ImageScanner_set_config\"]=wasmExports[\"k\"])(a0,a1,a2,a3);var _ImageScanner_enable_cache=Module[\"_ImageScanner_enable_cache\"]=(a0,a1)=>(_ImageScanner_enable_cache=Module[\"_ImageScanner_enable_cache\"]=wasmExports[\"l\"])(a0,a1);var _ImageScanner_recycle_image=Module[\"_ImageScanner_recycle_image\"]=(a0,a1)=>(_ImageScanner_recycle_image=Module[\"_ImageScanner_recycle_image\"]=wasmExports[\"m\"])(a0,a1);var _ImageScanner_get_results=Module[\"_ImageScanner_get_results\"]=a0=>(_ImageScanner_get_results=Module[\"_ImageScanner_get_results\"]=wasmExports[\"n\"])(a0);var _ImageScanner_scan=Module[\"_ImageScanner_scan\"]=(a0,a1)=>(_ImageScanner_scan=Module[\"_ImageScanner_scan\"]=wasmExports[\"o\"])(a0,a1);var _Image_create=Module[\"_Image_create\"]=(a0,a1,a2,a3,a4,a5)=>(_Image_create=Module[\"_Image_create\"]=wasmExports[\"p\"])(a0,a1,a2,a3,a4,a5);var _Image_destory=Module[\"_Image_destory\"]=a0=>(_Image_destory=Module[\"_Image_destory\"]=wasmExports[\"q\"])(a0);var _Image_get_symbols=Module[\"_Image_get_symbols\"]=a0=>(_Image_get_symbols=Module[\"_Image_get_symbols\"]=wasmExports[\"r\"])(a0);var ___errno_location=()=>(___errno_location=wasmExports[\"__errno_location\"])();var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"t\"])(a0);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"u\"])(a0);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nexport default zbarWasm;",
"import zbarJs from 'zbarJs'\nimport type ZBarInstance from './ZBarInstance'\n\n\nlet zbarInstancePromise: Promise<ZBarInstance>\n\n\n/**\n * Arguments used for building a `ZBarInstance`\n */\nexport type ZBarModuleArgs = {\n  locateFile?: (filename: string, directory: string) => string,\n}\n\n\n/**\n * Causes a new `ZBarInstance` built with the specified arguments\n * to be returned by subsequent `getInstance()` calls.\n */\nexport function setModuleArgs(args: ZBarModuleArgs = {}): void {\n  zbarInstancePromise = (async function(): Promise<ZBarInstance> {\n    const zbarInstance = await zbarJs(args)\n\n    if (zbarInstance) {\n      return zbarInstance\n\n    } else {\n      throw Error('WASM was not loaded')\n    }\n  })()\n}\n\n\n/**\n * Returns a `ZBarInstance` built with the arguments set by `setModuleArgs()`,\n * or built without any arguments.\n * Successive calls return the same instance until `setModuleArgs()` is called.\n */\nexport async function getInstance(): Promise<ZBarInstance> {\n  // Instantiate the module without arguments if no args have been set explicitly\n  if (!zbarInstancePromise) {\n    setModuleArgs()\n  }\n\n  return await zbarInstancePromise\n}\n",
"/* Copied from https://github.com/mchehab/zbar, release 0.23.90 */\n\nexport enum ZBarSymbolType {\n  ZBAR_NONE\t       = 0,   /**< no symbol decoded */\n  ZBAR_PARTIAL     = 1,   /**< intermediate status */\n  ZBAR_EAN2\t       = 2,   /**< GS1 2-digit add-on */\n  ZBAR_EAN5\t       = 5,   /**< GS1 5-digit add-on */\n  ZBAR_EAN8\t       = 8,   /**< EAN-8 */\n  ZBAR_UPCE\t       = 9,   /**< UPC-E */\n  ZBAR_ISBN10\t     = 10,  /**< ISBN-10 (from EAN-13). @since 0.4 */\n  ZBAR_UPCA\t       = 12,  /**< UPC-A */\n  ZBAR_EAN13\t     = 13,  /**< EAN-13 */\n  ZBAR_ISBN13\t     = 14,  /**< ISBN-13 (from EAN-13). @since 0.4 */\n  ZBAR_COMPOSITE   = 15,  /**< EAN/UPC composite */\n  ZBAR_I25\t       = 25,  /**< Interleaved 2 of 5. @since 0.4 */\n  ZBAR_DATABAR     = 34,  /**< GS1 DataBar (RSS). @since 0.11 */\n  ZBAR_DATABAR_EXP = 35,  /**< GS1 DataBar Expanded. @since 0.11 */\n  ZBAR_CODABAR     = 38,  /**< Codabar. @since 0.11 */\n  ZBAR_CODE39\t     = 39,  /**< Code 39. @since 0.4 */\n  ZBAR_PDF417\t     = 57,  /**< PDF417. @since 0.6 */\n  ZBAR_QRCODE\t     = 64,  /**< QR Code. @since 0.10 */\n  ZBAR_SQCODE\t     = 80,  /**< SQ Code. @since 0.20.1 */\n  ZBAR_CODE93\t     = 93,  /**< Code 93. @since 0.11 */\n  ZBAR_CODE128     = 128, /**< Code 128 */\n\n  /*\n   * Please see _zbar_get_symbol_hash() if adding\n   * anything after 128\n   */\n\n  /** mask for base symbol type.\n   * @deprecated in 0.11, remove this from existing code\n   */\n  ZBAR_SYMBOL = 0x00ff,\n  /** 2-digit add-on flag.\n   * @deprecated in 0.11, a ::ZBAR_EAN2 component is used for\n   * 2-digit GS1 add-ons\n   */\n  ZBAR_ADDON2 = 0x0200,\n  /** 5-digit add-on flag.\n   * @deprecated in 0.11, a ::ZBAR_EAN5 component is used for\n   * 5-digit GS1 add-ons\n   */\n  ZBAR_ADDON5 = 0x0500,\n  /** add-on flag mask.\n   * @deprecated in 0.11, GS1 add-ons are represented using composite\n   * symbols of type ::ZBAR_COMPOSITE; add-on components use ::ZBAR_EAN2\n   * or ::ZBAR_EAN5\n   */\n  ZBAR_ADDON = 0x0700,\n}\n\nexport enum ZBarConfigType {\n  ZBAR_CFG_ENABLE = 0,            /**< enable symbology/feature */\n  ZBAR_CFG_ADD_CHECK,        /**< enable check digit when optional */\n  ZBAR_CFG_EMIT_CHECK,       /**< return check digit when present */\n  ZBAR_CFG_ASCII,            /**< enable full ASCII character set */\n  ZBAR_CFG_BINARY,           /**< don't convert binary data to text */\n  ZBAR_CFG_NUM,              /**< number of boolean decoder configs */\n\n  ZBAR_CFG_MIN_LEN = 0x20,        /**< minimum data length for valid decode */\n  ZBAR_CFG_MAX_LEN,        /**< maximum data length for valid decode */\n\n  ZBAR_CFG_UNCERTAINTY = 0x40,    /**< required video consistency frames */\n\n  ZBAR_CFG_POSITION = 0x80,       /**< enable scanner to collect position data */\n  ZBAR_CFG_TEST_INVERTED,  /**< if fails to decode, test inverted */\n\n  ZBAR_CFG_X_DENSITY = 0x100,     /**< image scanner vertical scan density */\n  ZBAR_CFG_Y_DENSITY,     /**< image scanner horizontal scan density */\n}\n\nexport enum ZBarOrientation {\n  ZBAR_ORIENT_UNKNOWN = -1,       /**< unable to determine orientation */\n  ZBAR_ORIENT_UP,            /**< upright, read left to right */\n  ZBAR_ORIENT_RIGHT,         /**< sideways, read top to bottom */\n  ZBAR_ORIENT_DOWN,          /**< upside-down, read right to left */\n  ZBAR_ORIENT_LEFT,          /**< sideways, read bottom to top */\n}\n",
"import type ZBarInstance from './ZBarInstance'\n\nexport class CppObject {\n  protected ptr: number\n  protected inst: ZBarInstance\n\n  protected constructor(ptr: number, inst: ZBarInstance) {\n    this.ptr = ptr\n    this.inst = inst\n  }\n\n  protected checkAlive(): void {\n    if (this.ptr) return\n    throw Error('Call after destroyed')\n  }\n\n  getPointer(): number {\n    this.checkAlive()\n    return this.ptr\n  }\n}\n",
"import { ZBarOrientation, ZBarSymbolType } from './enum'\n\nexport interface Point {\n  x: number\n  y: number\n}\n\nclass TypePointer {\n  protected ptr: number\n  protected ptr32: number\n  protected buf: ArrayBuffer\n  protected HEAP8: Int8Array\n  protected HEAP32: Int32Array\n  protected HEAPU32: Uint32Array\n\n  constructor(ptr: number, buf: ArrayBuffer) {\n    this.ptr = ptr\n    this.ptr32 = ptr >> 2\n    this.buf = buf\n    this.HEAP8 = new Int8Array(buf)\n    this.HEAPU32 = new Uint32Array(buf)\n    this.HEAP32 = new Int32Array(buf)\n  }\n}\n\nclass SymbolPtr extends TypePointer {\n  get type(): ZBarSymbolType {\n    return this.HEAPU32[this.ptr32] as ZBarSymbolType\n  }\n\n  get data(): Int8Array {\n    const\n      len = this.HEAPU32[this.ptr32 + 4],\n      ptr = this.HEAPU32[this.ptr32 + 5];\n    return Int8Array.from(this.HEAP8.subarray(ptr, ptr + len))\n  }\n\n  get points(): Array<Point> {\n    const\n      len = this.HEAPU32[this.ptr32 + 7],\n      ptr = this.HEAPU32[this.ptr32 + 8],\n      ptr32 = ptr >> 2,\n      res: Point[] = [];\n    for (let i = 0; i < len; ++i) {\n      const\n        x = this.HEAP32[ptr32 + i * 2],\n        y = this.HEAP32[ptr32 + i * 2 + 1];\n      res.push({ x, y } as Point)\n    }\n    return res\n  }\n\n  get orientation(): ZBarOrientation {\n    return this.HEAP32[this.ptr32 + 9]\n  }\n\n  get next(): SymbolPtr | null {\n    const ptr = this.HEAPU32[this.ptr32 + 11]\n    if (!ptr) return null\n    return new SymbolPtr(ptr, this.buf)\n  }\n\n  get time(): number {\n    return this.HEAPU32[this.ptr32 + 13]\n  }\n\n  get cacheCount(): number {\n    return this.HEAP32[this.ptr32 + 14]\n  }\n\n  get quality(): number {\n    return this.HEAP32[this.ptr32 + 15]\n  }\n}\n\nclass SymbolSetPtr extends TypePointer {\n  get head(): SymbolPtr | null {\n    const ptr = this.HEAPU32[this.ptr32 + 2]\n    if (!ptr) return null\n    return new SymbolPtr(ptr, this.buf)\n  }\n}\n\nexport class ZBarSymbol {\n  type: ZBarSymbolType\n  typeName: string\n  data: Int8Array\n  points: Array<Point>\n  orientation: ZBarOrientation\n  time: number\n  cacheCount: number\n  quality: number\n  private constructor(ptr: SymbolPtr) {\n    this.type = ptr.type\n    this.typeName = ZBarSymbolType[this.type]\n    this.data = ptr.data\n    this.points = ptr.points\n    this.orientation = ptr.orientation\n    this.time = ptr.time\n    this.cacheCount = ptr.cacheCount\n    this.quality = ptr.quality\n  }\n\n  static createSymbolsFromPtr(ptr: number, buf: ArrayBuffer): Array<ZBarSymbol> {\n    if (ptr == 0) return [];\n\n    const set = new SymbolSetPtr(ptr, buf);\n    let symbol = set.head;\n    const res: ZBarSymbol[] = [];\n    while (symbol !== null) {\n      res.push(new ZBarSymbol(symbol));\n      symbol = symbol.next;\n    }\n    return res;\n  }\n\n  decode(encoding?: string) {\n    const decoder = new TextDecoder(encoding);\n    return decoder.decode(this.data);\n  }\n}\n",
"import { CppObject } from './CppObject'\nimport { ZBarSymbol } from './ZBarSymbol'\nimport { getInstance } from './instance'\n\nexport class ZBarImage extends CppObject {\n  static async createFromGrayBuffer(\n    width: number,\n    height: number,\n    dataBuf: ArrayBuffer,\n    sequence_num: number = 0\n  ): Promise<ZBarImage> {\n    const\n      inst = await getInstance(),\n      data = new Uint8Array(dataBuf),\n      len = width * height;\n    if (len !== data.byteLength) {\n      throw Error(`data length (${data.byteLength} bytes) does not match width and height (${len} bytes)`)\n    }\n    const\n      buf = inst._malloc(len),\n      heap = inst.HEAPU8;\n    heap.set(data, buf)\n    const ptr = inst._Image_create(\n      width,\n      height,\n      0x30303859 /* Y800 */,\n      buf,\n      len,\n      sequence_num\n    )\n    return new this(ptr, inst)\n  }\n\n  static async createFromRGBABuffer(\n    width: number,\n    height: number,\n    dataBuf: ArrayBuffer,\n    sequence_num: number = 0\n  ): Promise<ZBarImage> {\n    const\n      inst = await getInstance(),\n      data = new Uint8Array(dataBuf),\n      len = width * height;\n    if (len * 4 !== data.byteLength) {\n      throw Error(`data length (${data.byteLength} bytes) does not match width and height (${len * 4} bytes)`)\n    }\n    const\n      buf = inst._malloc(len),\n      bufEnd = buf + len,\n      heap = inst.HEAPU8;\n    for (let i = buf, j = 0; i < bufEnd; i++, j += 4) {\n      heap[i] = (\n        data[j] * 19595 +\n        data[j + 1] * 38469 +\n        data[j + 2] * 7472\n      ) >> 16\n    }\n    const ptr = inst._Image_create(\n      width,\n      height,\n      0x30303859 /* Y800 */,\n      buf,\n      len,\n      sequence_num\n    )\n    return new this(ptr, inst)\n  }\n\n  destroy(): void {\n    this.checkAlive()\n    this.inst._Image_destory(this.ptr)\n    this.ptr = 0\n  }\n\n  getSymbols(): Array<ZBarSymbol> {\n    this.checkAlive()\n    const res = this.inst._Image_get_symbols(this.ptr)\n    return ZBarSymbol.createSymbolsFromPtr(res, this.inst.HEAPU8.buffer)\n  }\n}\n",
"import { CppObject } from './CppObject'\nimport { ZBarImage } from './ZBarImage'\nimport { getInstance } from './instance'\nimport { ZBarSymbol } from './ZBarSymbol'\nimport { ZBarSymbolType, ZBarConfigType } from './enum'\n\nexport class ZBarScanner extends CppObject {\n  static async create(): Promise<ZBarScanner> {\n    const\n      inst = await getInstance(),\n      ptr = inst._ImageScanner_create();\n    return new this(ptr, inst)\n  }\n\n  destroy(): void {\n    this.checkAlive()\n    this.inst._ImageScanner_destory(this.ptr)\n    this.ptr = 0\n  }\n\n  setConfig(sym: ZBarSymbolType, conf: ZBarConfigType, value: number): number {\n    this.checkAlive()\n    return this.inst._ImageScanner_set_config(this.ptr, sym, conf, value)\n  }\n\n  enableCache(enable: boolean = true): void {\n    this.checkAlive()\n    this.inst._ImageScanner_enable_cache(this.ptr, enable)\n  }\n\n  recycleImage(image: ZBarImage): void {\n    this.checkAlive()\n    this.inst._ImageScanner_recycle_image(this.ptr, image.getPointer())\n  }\n\n  getResults(): Array<ZBarSymbol> {\n    this.checkAlive()\n    const res = this.inst._ImageScanner_get_results(this.ptr)\n    return ZBarSymbol.createSymbolsFromPtr(res, this.inst.HEAPU8.buffer)\n  }\n\n  scan(image: ZBarImage): number {\n    this.checkAlive()\n    return this.inst._ImageScanner_scan(this.ptr, image.getPointer())\n  }\n}\n",
"import { ZBarImage } from './ZBarImage'\nimport { ZBarScanner } from './ZBarScanner'\nimport { ZBarSymbol } from './ZBarSymbol'\nimport { ZBarConfigType, ZBarSymbolType } from './enum'\n\n// Returns a new ZBarScanner instance that delegates QR code text decoding\n// to the native TextDecoder (fixes #7: Issue with utf-8)\nexport const getDefaultScanner = async () => {\n  const scanner = await ZBarScanner.create()\n  scanner.setConfig(ZBarSymbolType.ZBAR_NONE, ZBarConfigType.ZBAR_CFG_BINARY, 1)\n  return scanner\n}\n\nlet defaultScanner: ZBarScanner\n\nconst scanImage = async (\n  image: ZBarImage,\n  scanner?: ZBarScanner\n): Promise<Array<ZBarSymbol>> => {\n  if (scanner === undefined) {\n    // Create the default scanner lazily\n    scanner = defaultScanner || await getDefaultScanner()\n    defaultScanner = scanner\n  }\n  const res = scanner.scan(image)\n  if (res < 0) {\n    throw Error('Scan Failed')\n  }\n  if (res === 0) return []\n  return image.getSymbols()\n}\nexport const scanGrayBuffer = async (\n  buffer: ArrayBuffer,\n  width: number,\n  height: number,\n  scanner?: ZBarScanner\n): Promise<Array<ZBarSymbol>> => {\n  const\n    image = await ZBarImage.createFromGrayBuffer(width, height, buffer),\n    res = await scanImage(image, scanner);\n  image.destroy()\n  return res\n}\nexport const scanRGBABuffer = async (\n  buffer: ArrayBuffer,\n  width: number,\n  height: number,\n  scanner?: ZBarScanner\n): Promise<Array<ZBarSymbol>> => {\n  const\n    image = await ZBarImage.createFromRGBABuffer(width, height, buffer),\n    res = await scanImage(image, scanner);\n  image.destroy()\n  return res\n}\nexport const scanImageData = async (\n  image: ImageData,\n  scanner?: ZBarScanner\n): Promise<Array<ZBarSymbol>> => {\n  return await scanRGBABuffer(\n    image.data.buffer,\n    image.width,\n    image.height,\n    scanner\n  )\n}\n"
],
"names": [
"_scriptDir",
"zbarWasm",
"url",
"moduleArg",
"readyPromiseResolve",
"readyPromiseReject",
"Module",
"Promise",
"resolve",
"reject",
"read_",
"readAsync",
"readBinary",
"moduleOverrides",
"Object",
"assign",
"ENVIRONMENT_IS_WEB",
"window",
"ENVIRONMENT_IS_WORKER",
"importScripts",
"ENVIRONMENT_IS_NODE",
"process",
"versions",
"node",
"scriptDirectory",
"createRequire",
"then",
"_polyfillNode_module",
"require",
"fs",
"nodePath",
"dirname",
"fileURLToPath",
"URL",
"filename",
"binary",
"isFileURI",
"normalize",
"readFileSync",
"undefined",
"ret",
"buffer",
"Uint8Array",
"onload",
"onerror",
"readFile",
"err",
"data",
"argv",
"length",
"replace",
"slice",
"self",
"location",
"href",
"document",
"currentScript",
"src",
"indexOf",
"substr",
"lastIndexOf",
"xhr",
"XMLHttpRequest",
"open",
"send",
"responseText",
"responseType",
"response",
"status",
"wasmBinary",
"wasmMemory",
"wasmExports",
"out",
"console",
"log",
"bind",
"error",
"WebAssembly",
"abort",
"HEAPU8",
"HEAPU32",
"ABORT",
"updateMemoryViews",
"b",
"Int8Array",
"Int16Array",
"Int32Array",
"Uint16Array",
"Uint32Array",
"Float32Array",
"Float64Array",
"__ATPRERUN__",
"__ATINIT__",
"__ATPOSTRUN__",
"runDependencies",
"dependenciesFulfilled",
"what",
"e",
"RuntimeError",
"wasmBinaryFile",
"path",
"dataURIPrefix",
"isDataURI",
"startsWith",
"getBinarySync",
"file",
"instantiateArrayBuffer",
"binaryFile",
"imports",
"receiver",
"fetch",
"credentials",
"catch",
"getBinaryPromise",
"instantiate",
"instance",
"reason",
"calledRun",
"callRuntimeCallbacks",
"callbacks",
"shift",
"growMemory",
"size",
"pages",
"byteLength",
"grow",
"UTF8Decoder",
"TextDecoder",
"printCharBuffers",
"printChar",
"stream",
"curr",
"heapOrArray",
"idx",
"maxBytesToRead",
"endIdx",
"endPtr",
"decode",
"subarray",
"str",
"u0",
"u1",
"u2",
"String",
"fromCharCode",
"ch",
"UTF8ArrayToString",
"push",
"wasmImports",
"d",
"Date",
"now",
"c",
"requestedSize",
"oldSize",
"maxHeapSize",
"x",
"multiple",
"cutDown",
"overGrownHeapSize",
"Math",
"min",
"newSize",
"max",
"f",
"fd",
"offset_low",
"offset_high",
"whence",
"newOffset",
"a",
"iov",
"iovcnt",
"pnum",
"num",
"i",
"ptr",
"len",
"j",
"run",
"doRun",
"cb",
"unshift",
"postRun",
"preRun",
"setTimeout",
"callback",
"info",
"receiveInstance",
"module",
"exports",
"id",
"removeRunDependency",
"result",
"instantiateStreaming",
"createWasm",
"a0",
"a1",
"a2",
"a3",
"a4",
"a5",
"runCaller",
"pop",
"ready",
"zbarInstancePromise",
"setModuleArgs",
"args",
"zbarInstance",
"zbarJs",
"Error",
"getInstance",
"ZBarSymbolType",
"ZBarConfigType",
"ZBarOrientation",
"CppObject",
"constructor",
"inst",
"this",
"checkAlive",
"getPointer",
"TypePointer",
"buf",
"ptr32",
"HEAP8",
"HEAP32",
"SymbolPtr",
"type",
"from",
"points",
"res",
"y",
"orientation",
"next",
"time",
"cacheCount",
"quality",
"SymbolSetPtr",
"head",
"ZBarSymbol",
"typeName",
"createSymbolsFromPtr",
"symbol",
"encoding",
"ZBarImage",
"createFromGrayBuffer",
"width",
"height",
"dataBuf",
"sequence_num",
"_malloc",
"set",
"_Image_create",
"createFromRGBABuffer",
"bufEnd",
"heap",
"destroy",
"_Image_destory",
"getSymbols",
"_Image_get_symbols",
"ZBarScanner",
"create",
"_ImageScanner_create",
"_ImageScanner_destory",
"setConfig",
"sym",
"conf",
"value",
"_ImageScanner_set_config",
"enableCache",
"enable",
"_ImageScanner_enable_cache",
"recycleImage",
"image",
"_ImageScanner_recycle_image",
"getResults",
"_ImageScanner_get_results",
"scan",
"_ImageScanner_scan",
"getDefaultScanner",
"__awaiter",
"scanner",
"ZBAR_NONE",
"ZBAR_CFG_BINARY",
"defaultScanner",
"scanImage",
"scanGrayBuffer",
"scanRGBABuffer",
"scanImageData"
],
"mappings": "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"
}